// <auto-generated />
using System;
using DeveloperStore.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DeveloperStore.Infrastructure.Migrations
{
    [DbContext(typeof(DeveloperStoreDbContext))]
    [Migration("20250824183104_SQLiteInitial")]
    partial class SQLiteInitial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("DeveloperStore.Domain.Entities.Sale", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("CancellationReason")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsCancelled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("SaleDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("SaleNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SaleNumber")
                        .IsUnique()
                        .HasDatabaseName("IX_Sales_SaleNumber");

                    b.ToTable("Sales", (string)null);
                });

            modelBuilder.Entity("DeveloperStore.Domain.Entities.SaleItem", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("SaleId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SaleId")
                        .HasDatabaseName("IX_SaleItems_SaleId");

                    b.ToTable("SaleItems", (string)null);
                });

            modelBuilder.Entity("DeveloperStore.Domain.Entities.Sale", b =>
                {
                    b.OwnsOne("DeveloperStore.Domain.ValueObjects.Money", "SaleLevelDiscount", b1 =>
                        {
                            b1.Property<Guid>("SaleId")
                                .HasColumnType("TEXT");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("SaleLevelDiscountAmount");

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .ValueGeneratedOnAdd()
                                .HasMaxLength(3)
                                .HasColumnType("TEXT")
                                .HasDefaultValue("BRL")
                                .HasColumnName("SaleLevelDiscountCurrency");

                            b1.HasKey("SaleId");

                            b1.ToTable("Sales");

                            b1.WithOwner()
                                .HasForeignKey("SaleId");
                        });

                    b.OwnsOne("DeveloperStore.Domain.ValueObjects.BranchInfo", "Branch", b1 =>
                        {
                            b1.Property<Guid>("SaleId")
                                .HasColumnType("TEXT");

                            b1.Property<Guid>("BranchId")
                                .HasColumnType("TEXT")
                                .HasColumnName("BranchId");

                            b1.Property<string>("Location")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("TEXT")
                                .HasColumnName("BranchLocation");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("TEXT")
                                .HasColumnName("BranchName");

                            b1.HasKey("SaleId");

                            b1.ToTable("Sales");

                            b1.WithOwner()
                                .HasForeignKey("SaleId");
                        });

                    b.OwnsOne("DeveloperStore.Domain.ValueObjects.CustomerInfo", "Customer", b1 =>
                        {
                            b1.Property<Guid>("SaleId")
                                .HasColumnType("TEXT");

                            b1.Property<Guid>("CustomerId")
                                .HasColumnType("TEXT")
                                .HasColumnName("CustomerId");

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasMaxLength(250)
                                .HasColumnType("TEXT")
                                .HasColumnName("CustomerEmail");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("TEXT")
                                .HasColumnName("CustomerName");

                            b1.HasKey("SaleId");

                            b1.ToTable("Sales");

                            b1.WithOwner()
                                .HasForeignKey("SaleId");
                        });

                    b.Navigation("Branch")
                        .IsRequired();

                    b.Navigation("Customer")
                        .IsRequired();

                    b.Navigation("SaleLevelDiscount")
                        .IsRequired();
                });

            modelBuilder.Entity("DeveloperStore.Domain.Entities.SaleItem", b =>
                {
                    b.HasOne("DeveloperStore.Domain.Entities.Sale", null)
                        .WithMany("Items")
                        .HasForeignKey("SaleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("DeveloperStore.Domain.ValueObjects.Money", "Discount", b1 =>
                        {
                            b1.Property<Guid>("SaleItemId")
                                .HasColumnType("TEXT");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("DiscountAmount");

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .ValueGeneratedOnAdd()
                                .HasMaxLength(3)
                                .HasColumnType("TEXT")
                                .HasDefaultValue("BRL")
                                .HasColumnName("DiscountCurrency");

                            b1.HasKey("SaleItemId");

                            b1.ToTable("SaleItems");

                            b1.WithOwner()
                                .HasForeignKey("SaleItemId");
                        });

                    b.OwnsOne("DeveloperStore.Domain.ValueObjects.Money", "UnitPrice", b1 =>
                        {
                            b1.Property<Guid>("SaleItemId")
                                .HasColumnType("TEXT");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("UnitPrice");

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .ValueGeneratedOnAdd()
                                .HasMaxLength(3)
                                .HasColumnType("TEXT")
                                .HasDefaultValue("BRL")
                                .HasColumnName("UnitPriceCurrency");

                            b1.HasKey("SaleItemId");

                            b1.ToTable("SaleItems");

                            b1.WithOwner()
                                .HasForeignKey("SaleItemId");
                        });

                    b.OwnsOne("DeveloperStore.Domain.ValueObjects.ProductInfo", "Product", b1 =>
                        {
                            b1.Property<Guid>("SaleItemId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Category")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("TEXT")
                                .HasColumnName("ProductCategory");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("TEXT")
                                .HasColumnName("ProductName");

                            b1.Property<Guid>("ProductId")
                                .HasColumnType("TEXT")
                                .HasColumnName("ProductId");

                            b1.HasKey("SaleItemId");

                            b1.ToTable("SaleItems");

                            b1.WithOwner()
                                .HasForeignKey("SaleItemId");

                            b1.OwnsOne("DeveloperStore.Domain.ValueObjects.Money", "UnitPrice", b2 =>
                                {
                                    b2.Property<Guid>("ProductInfoSaleItemId")
                                        .HasColumnType("TEXT");

                                    b2.Property<decimal>("Amount")
                                        .HasColumnType("decimal(18,2)")
                                        .HasColumnName("ProductUnitPrice");

                                    b2.Property<string>("Currency")
                                        .IsRequired()
                                        .ValueGeneratedOnAdd()
                                        .HasMaxLength(3)
                                        .HasColumnType("TEXT")
                                        .HasDefaultValue("BRL")
                                        .HasColumnName("ProductUnitPriceCurrency");

                                    b2.HasKey("ProductInfoSaleItemId");

                                    b2.ToTable("SaleItems");

                                    b2.WithOwner()
                                        .HasForeignKey("ProductInfoSaleItemId");
                                });

                            b1.Navigation("UnitPrice")
                                .IsRequired();
                        });

                    b.Navigation("Discount")
                        .IsRequired();

                    b.Navigation("Product")
                        .IsRequired();

                    b.Navigation("UnitPrice")
                        .IsRequired();
                });

            modelBuilder.Entity("DeveloperStore.Domain.Entities.Sale", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
